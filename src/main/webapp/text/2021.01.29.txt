Spring 설정

1. xml
2. java
3. java + xml
** 설정 파일을 용도에 따라 여러개로 분리하는 것도 가능


xml에 값을 표시 하는 방법은 문자열 밖에 없음
value = "5"

5라고 표시한 값은 java의 문자열 타입으로 해석할지 , 숫자 타입으로 해석할지는
해당 class의 필드 타입을 보고 스프링이 결정하게 된다.

날짜 타입에 대해서는 국가별, 사용자별 표기 형식이 다르기 때문에

프레임워크에서 임의로 타입 변환을 하는것이 불가능 하다.
(UserVo reg_dt 컬럼)

--3교시까지

스프링 프레임 워크에서 타입 변환이 필요한 경우는 크게 2가지

1. 값을 주입할 때 (DI)
2. 컨트롤러에서 파라미터를 value 객체에 바인딩 할때


스프링 프레임 워크에서 커스텀 타입 변환을 등록하는 방법은 크게 3가지
1. propertyEditor: 문자 <--> 타입 간의 변환
2. conversionService : 타입 <--> 타입 간의 변화
3. formattingConversionService: 타입<-->타입 간의 변환

1-3의 방법은 동시에 적용하는 것은 불가능
2,3의 경우 스프링 번의 이름을 id="conversionService"로 사용하도록 스프링에서 강제함

1번 : 생략
2번 : 1.스프링에서 제공하는 ConversionServiceFactoryBean 클래스를 스프링 번으로 등록
	(위에서 언급한 스프링 번 이름을 준수해야함)
	2.해당클래스의 converters 필드에 개발자가 만든 convert를 set으로 주입
	- 개발자가 만드는 converter는 Converter인터페이스를 구현하여 만든다.
	
	
3번 : 1.스프링에서 제공하는 FormattingConversionServiceFactoryBean 클래스를 스트링 번으로 등록
(위에서 언급한 스프링 번 이름을 준수해야함)
	2.Value 객체에 어노테이션으로 변환할 필드에 적용

스프링에서 컨트롤러 생성 방법
** 서블릿의 과정과 유사

1.httpServlet 클래스를 상속받은 클래스를 생성
2.url-mapping

spring
1.@Controller 어노테이션을 적용한 클래스를 생성
2.@requestMapping 어노테이션을 이용하여 class, mehtod에 적용

**차이점
서블릿의 경우 class 의 단위로 url-mapping이 이루어짐
spring class.method url-mapping이 이루어짐


servlet : userList, user, userRegist, userModify, userDelete:5개의 서블릿을 생성
spring : 한개로 통합 가능

스프링 컨트롤러 테스트
servlet 환경에서는 servlet 자체를 테스트하기가 굉장히 어려움
 servlet 생성/실행하는 주제가 servlet-container
  httpServletRequest, httpSession등 필요한 객체가 많음
  
스프링 환경에서는 해당 객체를 쉽게 만들 수 있는 Mock 객체를 제공
 MockHttpServletRequest,  MockHttpServletResponse, MockHttpSession
 
 ==> 손이 많이 간다.
 
 spring 프레임워크에서 처리될 요청은 Dispatcher Servlet이 받으므로
 Disdpatcher Servlet을 대신하여 테스트를 할 수 있는 객체를 제공하는 형식으로 컨트롤러 테스트를 진행
 
 DisdpatcherServlet ==> MockMvc생성을 위해서 --> WebApplicationContext 객체가 필요
 											==> tmvmfld vmfpdladnjzmdptj .ioc 컨테이너 생성시 자동으로 생성


  
 